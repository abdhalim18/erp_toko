generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Pengguna {
  id            String         @id @default(cuid()) @map("pengguna")
  name          String         @map("nama")
  email         String         @unique
  password      String         @map("kata_sandi")
  role          UserRole       @default(STAFF) @map("peran")
  createdAt     DateTime       @default(now()) @map("dibuat_pada")
  updatedAt     DateTime       @updatedAt @map("diperbarui_pada")
  refreshTokens TokenSegar[]
  penjualan     Penjualan[]

  @@map("pengguna")
}

model TokenSegar {
  id        String   @id @default(cuid()) @map("token_segar")
  token     String   @unique
  userId    String   @map("id_pengguna")
  expiresAt DateTime @map("kadaluarsa_pada")
  createdAt DateTime @default(now()) @map("dibuat_pada")
  pengguna  Pengguna @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "token_segar_id_pengguna_fkey")
  @@map("token_segar")
}

model Produk {
  id            String           @id @default(cuid()) @map("produk")
  name          String           @map("nama")
  description   String?          @map("deskripsi")
  sku           String           @unique
  barcode       String?
  unit          String           @map("satuan")
  purchasePrice Decimal          @default(0.000000000000000000000000000000) @map("harga_beli")
  sellingPrice  Decimal          @default(0.000000000000000000000000000000) @map("harga_jual")
  minStockLevel Int              @default(10) @map("stok_minimal")
  currentStock  Int              @default(0) @map("stok_sekarang")
  supplierId    String           @map("id_pemasok")
  createdAt     DateTime         @default(now()) @map("dibuat_pada")
  updatedAt     DateTime         @updatedAt @map("diperbarui_pada")
  categoryId    String           @map("id_kategori")
  batches       Batch[]
  kategori      Kategori         @relation(fields: [categoryId], references: [id])
  pemasok       Pemasok          @relation(fields: [supplierId], references: [id])
  itemPembelian ItemPembelian[]
  itemPenjualan ItemPenjualan[]

  @@index([categoryId], map: "produk_id_kategori_fkey")
  @@index([supplierId], map: "produk_id_pemasok_fkey")
  @@map("produk")
}

model Batch {
  id                String           @id @default(cuid()) @map("batch")
  batchNumber       String           @map("nomor_batch")
  productId         String           @map("id_produk")
  quantity          Int              @map("kuantitas")
  expiryDate        DateTime         @map("tanggal_kadaluarsa")
  manufacturingDate DateTime         @map("tanggal_produksi")
  purchaseDate      DateTime         @default(now()) @map("tanggal_pembelian")
  supplierId        String           @map("id_pemasok")
  createdAt         DateTime         @default(now()) @map("dibuat_pada")
  updatedAt         DateTime         @updatedAt @map("diperbarui_pada")
  produk            Produk           @relation(fields: [productId], references: [id], onDelete: Cascade)
  pemasok           Pemasok          @relation(fields: [supplierId], references: [id])
  itemPembelian     ItemPembelian[]
  itemPenjualan     ItemPenjualan[]

  @@index([productId], map: "batch_id_produk_fkey")
  @@index([supplierId], map: "batch_id_pemasok_fkey")
  @@map("batch")
}

model Kategori {
  id          String    @id @default(cuid()) @map("kategori")
  name        String    @unique @map("nama")
  description String?   @map("deskripsi")
  createdAt   DateTime  @default(now()) @map("dibuat_pada")
  updatedAt   DateTime  @updatedAt @map("diperbarui_pada")
  products    Produk[]

  @@map("kategori")
}

model Pemasok {
  id          String          @id @default(cuid()) @map("pemasok")
  name        String          @map("nama")
  contactName String?         @map("nama_kontak")
  email       String?         @map("email")
  phone       String?         @map("telepon")
  address     String?         @map("alamat")
  createdAt   DateTime        @default(now()) @map("dibuat_pada")
  updatedAt   DateTime        @updatedAt @map("diperbarui_pada")
  batches     Batch[]
  products    Produk[]
  pembelian   Pembelian[]

  @@map("pemasok")
}

model Pembelian {
  id             String          @id @default(cuid()) @map("pembelian")
  orderNumber    String          @unique @map("nomor_pesanan")
  supplierId     String          @map("id_pemasok")
  status         OrderStatus     @default(PENDING) @map("status")
  orderDate      DateTime        @default(now()) @map("tanggal_pesanan")
  expectedDate   DateTime?       @map("tanggal_diterima_estimasi")
  receivedDate   DateTime?       @map("tanggal_diterima")
  totalAmount    Decimal         @map("total_jumlah")
  createdAt      DateTime        @default(now()) @map("dibuat_pada")
  updatedAt      DateTime        @updatedAt @map("diperbarui_pada")
  items          ItemPembelian[]
  pemasok        Pemasok         @relation(fields: [supplierId], references: [id])

  @@index([supplierId], map: "pembelian_id_pemasok_fkey")
  @@map("pembelian")
}

model ItemPembelian {
  id              String     @id @default(cuid()) @map("item_pembelian")
  purchaseOrderId String     @map("id_pembelian")
  productId       String     @map("id_produk")
  quantity        Int        @map("kuantitas")
  pricePerUnit    Decimal    @map("harga_per_unit")
  batchId         String?    @map("id_batch")
  createdAt       DateTime   @default(now()) @map("dibuat_pada")
  updatedAt       DateTime   @updatedAt @map("diperbarui_pada")
  batch           Batch?     @relation(fields: [batchId], references: [id])
  produk          Produk     @relation(fields: [productId], references: [id])
  pembelian       Pembelian  @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)

  @@index([batchId], map: "item_pembelian_id_batch_fkey")
  @@index([productId], map: "item_pembelian_id_produk_fkey")
  @@index([purchaseOrderId], map: "item_pembelian_id_pembelian_fkey")
  @@map("item_pembelian")
}

model Penjualan {
  id              String          @id @default(cuid()) @map("penjualan")
  invoiceNumber   String          @unique @map("nomor_invoice")
  customerName    String          @map("nama_pelanggan")
  customerPhone   String?         @map("telepon_pelanggan")
  customerEmail   String?         @map("email_pelanggan")
  subtotal        Decimal         @default(0.000000000000000000000000000000) @map("subtotal")
  tax             Decimal         @default(0.000000000000000000000000000000) @map("pajak")
  discount        Decimal         @default(0.000000000000000000000000000000) @map("diskon")
  total           Decimal         @default(0.000000000000000000000000000000) @map("total")
  paymentMethod   String          @map("metode_pembayaran")
  paymentStatus   PaymentStatus   @default(PENDING) @map("status_pembayaran")
  status          OrderStatus     @default(COMPLETED) @map("status")
  notes           String?         @map("catatan")
  userId          String          @map("id_pengguna")
  createdAt       DateTime        @default(now()) @map("dibuat_pada")
  updatedAt       DateTime        @updatedAt @map("diperbarui_pada")
  pengguna        Pengguna        @relation(fields: [userId], references: [id])
  items           ItemPenjualan[]

  @@index([userId], map: "penjualan_id_pengguna_fkey")
  @@map("penjualan")
}

model ItemPenjualan {
  id           String     @id @default(cuid()) @map("item_penjualan")
  saleId       String     @map("id_penjualan")
  productId    String     @map("id_produk")
  quantity     Int        @map("kuantitas")
  pricePerUnit Decimal    @map("harga_per_unit")
  subtotal     Decimal    @map("subtotal")
  batchId      String?    @map("id_batch")
  discount     Decimal    @default(0.000000000000000000000000000000) @map("diskon")
  createdAt    DateTime   @default(now()) @map("dibuat_pada")
  updatedAt    DateTime   @updatedAt @map("diperbarui_pada")
  batch        Batch?     @relation(fields: [batchId], references: [id])
  produk       Produk     @relation(fields: [productId], references: [id])
  penjualan    Penjualan  @relation(fields: [saleId], references: [id], onDelete: Cascade)

  @@index([batchId], map: "item_penjualan_id_batch_fkey")
  @@index([productId], map: "item_penjualan_id_produk_fkey")
  @@index([saleId], map: "item_penjualan_id_penjualan_fkey")
  @@map("item_penjualan")
}

enum UserRole {
  ADMIN
  STAFF
}

enum PaymentStatus {
  PENDING
  PAID
  PARTIALLY_PAID
  CANCELLED
  REFUNDED
}

enum OrderStatus {
  DRAFT
  PENDING
  COMPLETED
  CANCELLED
  PARTIALLY_RECEIVED
}
